name: Build HyperExtra

on:
  push:
    tags: [ "*" ]
    branches: [ "yuki-api" ]
  pull_request:
    branches: [ "yuki-api" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
  
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Build with Gradle
        run: |
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          ./gradlew assembleRelease

      - name: Sign Release
        env: 
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        if: ${{ env.SIGNING_KEY != '' }}
        continue-on-error: true
        uses: kevin-david/zipalign-sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload build artifact
        env: 
           SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        if: ${{ env.SIGNING_KEY != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: HyperExtra
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Release apk
        env: 
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        if: ${{ env.SIGNING_KEY != '' && github.ref_type == 'tag' }}
        continue-on-error: true
        uses: ncipollo/release-action@v1
        with:
          token: ${{ github.token }}
          artifacts: ${{steps.sign_app.outputs.signedReleaseFile}}
          generateReleaseNotes: true
          makeLatest: true
          replacesArtifacts: true